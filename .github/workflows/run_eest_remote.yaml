name: Run Remote EEST Fixture

on:
  workflow_dispatch:
    inputs:
      fork:
        description: "Fork passed to --fork"
        required: true
        default: "Osaka"
      rpc_endpoint:
        description: "Execution RPC endpoint"
        required: true
      rpc_chain_id:
        description: "Chain ID for the RPC endpoint"
        required: true
        default: "10209"
      chain_id:
        description: "Chain ID passed to --chain-id"
        required: true
        default: "10209"
      rpc_seed_key:
        description: "Private key used for remote execution (consider using secrets)"
        required: true
        default: "82fcff5c93519f3615d6a92a5a7d146ee305082d3d768d63eb1b45f11f419346"
      test_target:
        description: "Pytest test to execute"
        required: true
        default: "./tests/osaka/eip7825_transaction_gas_limit_cap/test_tx_gas_limit.py::test_transaction_gas_limit_cap[fork_Osaka-tx_gas_limit_cap_none0-state_test]"
      html_report:
        description: "Path for the generated HTML report"
        required: true
        default: "./execution_results/index.html"
      extra_args:
        description: "Additional arguments appended to the execute command"
        required: false
        default: ""

jobs:
  run-remote-execution:
    name: Run remote execute command
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          version: ${{ vars.UV_VERSION || 'latest' }}
          python-version: ${{ vars.DEFAULT_PYTHON_VERSION || '3.11' }}

      - name: Sync project dependencies
        run: uv sync --all-extras

      - name: Prepare report directory
        run: |
          mkdir -p "$(dirname "${{ inputs.html_report }}")"

      - name: Execute remote fixture fill
        run: |
          uv run execute remote \
            --fork="${{ inputs.fork }}" \
            --rpc-endpoint="${{ inputs.rpc_endpoint }}" \
            --rpc-chain-id="${{ inputs.rpc_chain_id }}" \
            --chain-id="${{ inputs.chain_id }}" \
            --rpc-seed-key="${{ inputs.rpc_seed_key }}" \
            "${{ inputs.test_target }}" \
            --html="${{ inputs.html_report }}" \
            ${{ inputs.extra_args }}
